# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-10-05 17:51
from __future__ import unicode_literals

from decimal import Decimal
import django.contrib.postgres.fields.hstore
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_prices.models
import satchless.item
import versatileimagefield.fields
from django.contrib.postgres.operations import HStoreExtension


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        HStoreExtension(),
        migrations.CreateModel(
            name='AttributeChoiceValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='display name')),
                ('slug', models.SlugField()),
                ('color', models.CharField(blank=True, max_length=7, validators=[django.core.validators.RegexValidator('^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')], verbose_name='color')),
            ],
            options={
                'verbose_name_plural': 'attribute choices values',
                'verbose_name': 'attribute choices value',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='name')),
                ('slug', models.SlugField(verbose_name='slug')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('hidden', models.BooleanField(default=False, verbose_name='hidden')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='product.Category', verbose_name='parent')),
            ],
            options={
                'permissions': (('view_category', 'Can view categories'), ('edit_category', 'Can edit categories')),
                'verbose_name_plural': 'categories',
                'verbose_name': 'category',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='name')),
                ('description', models.TextField(verbose_name='description')),
                ('price', django_prices.models.PriceField(currency='USD', decimal_places=2, max_digits=12, verbose_name='price')),
                ('available_on', models.DateField(blank=True, null=True, verbose_name='available on')),
                ('is_published', models.BooleanField(default=True, verbose_name='is published')),
                ('attributes', django.contrib.postgres.fields.hstore.HStoreField(default={}, verbose_name='attributes')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='updated at')),
                ('is_featured', models.BooleanField(default=False, verbose_name='is featured')),
                ('categories', models.ManyToManyField(related_name='products', to='product.Category', verbose_name='categories')),
            ],
            options={
                'permissions': (('view_product', 'Can view products'), ('edit_product', 'Can edit products')),
                'verbose_name_plural': 'products',
                'verbose_name': 'product',
            },
            bases=(models.Model, satchless.item.ItemRange),
        ),
        migrations.CreateModel(
            name='ProductAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True, verbose_name='internal name')),
                ('name', models.CharField(max_length=100, verbose_name='display name')),
            ],
            options={
                'ordering': ('slug',),
                'verbose_name_plural': 'product attributes',
                'verbose_name': 'product attribute',
            },
        ),
        migrations.CreateModel(
            name='ProductClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='name')),
                ('has_variants', models.BooleanField(default=True, verbose_name='has variants')),
                ('is_shipping_required', models.BooleanField(default=False, verbose_name='is shipping required')),
                ('product_attributes', models.ManyToManyField(blank=True, related_name='products_class', to='product.ProductAttribute', verbose_name='product attributes')),
                ('variant_attributes', models.ManyToManyField(blank=True, related_name='product_variants_class', to='product.ProductAttribute', verbose_name='variant attributes')),
            ],
            options={
                'verbose_name_plural': 'product classes',
                'verbose_name': 'product class',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', versatileimagefield.fields.VersatileImageField(upload_to='products', verbose_name='image')),
                ('ppoi', versatileimagefield.fields.PPOIField(default='0.5x0.5', editable=False, max_length=20, verbose_name='ppoi')),
                ('alt', models.CharField(blank=True, max_length=128, verbose_name='short description')),
                ('order', models.PositiveIntegerField(editable=False, verbose_name='order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='product.Product', verbose_name='product')),
            ],
            options={
                'ordering': ('order',),
                'verbose_name_plural': 'product images',
                'verbose_name': 'product image',
            },
        ),
        migrations.CreateModel(
            name='ProductVariant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(max_length=32, unique=True, verbose_name='SKU')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='variant name')),
                ('price_override', django_prices.models.PriceField(blank=True, currency='USD', decimal_places=2, max_digits=12, null=True, verbose_name='price override')),
                ('attributes', django.contrib.postgres.fields.hstore.HStoreField(default={}, verbose_name='attributes')),
            ],
            options={
                'verbose_name_plural': 'product variants',
                'verbose_name': 'product variant',
            },
            bases=(models.Model, satchless.item.Item),
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=Decimal('1'), validators=[django.core.validators.MinValueValidator(0)], verbose_name='quantity')),
                ('quantity_allocated', models.IntegerField(default=Decimal('0'), validators=[django.core.validators.MinValueValidator(0)], verbose_name='allocated quantity')),
                ('cost_price', django_prices.models.PriceField(blank=True, currency='USD', decimal_places=2, max_digits=12, null=True, verbose_name='cost price')),
            ],
        ),
        migrations.CreateModel(
            name='StockLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='location')),
            ],
            options={
                'permissions': (('view_stock_location', 'Can view stock location'), ('edit_stock_location', 'Can edit stock location')),
            },
        ),
        migrations.CreateModel(
            name='VariantImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variant_images', to='product.ProductImage', verbose_name='image')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variant_images', to='product.ProductVariant', verbose_name='variant')),
            ],
            options={
                'verbose_name_plural': 'variant images',
                'verbose_name': 'variant image',
            },
        ),
        migrations.AddField(
            model_name='stock',
            name='location',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='product.StockLocation'),
        ),
        migrations.AddField(
            model_name='stock',
            name='variant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock', to='product.ProductVariant', verbose_name='variant'),
        ),
        migrations.AddField(
            model_name='productvariant',
            name='images',
            field=models.ManyToManyField(through='product.VariantImage', to='product.ProductImage', verbose_name='images'),
        ),
        migrations.AddField(
            model_name='productvariant',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='product.Product'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_class',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='product.ProductClass', verbose_name='product class'),
        ),
        migrations.AddField(
            model_name='attributechoicevalue',
            name='attribute',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='product.ProductAttribute'),
        ),
        migrations.AlterUniqueTogether(
            name='stock',
            unique_together=set([('variant', 'location')]),
        ),
        migrations.AlterUniqueTogether(
            name='attributechoicevalue',
            unique_together=set([('name', 'attribute')]),
        ),
    ]
